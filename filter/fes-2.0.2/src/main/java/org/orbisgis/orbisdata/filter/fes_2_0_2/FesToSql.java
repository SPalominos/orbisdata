/**
 * OrbisGIS is a java GIS application dedicated to research in GIScience.
 * OrbisGIS is developed by the GIS group of the DECIDE team of the
 * Lab-STICC CNRS laboratory, see <http://www.lab-sticc.fr/>.
 *
 * The GIS group of the DECIDE team is located at :
 *
 * Laboratoire Lab-STICC – CNRS UMR 6285
 * Equipe DECIDE
 * UNIVERSITÉ DE BRETAGNE-SUD
 * Institut Universitaire de Technologie de Vannes
 * 8, Rue Montaigne - BP 561 56017 Vannes Cedex
 *
 * OrbisGIS is distributed under GPL 3 license.
 *
 * Copyright (C) 2015-2017 CNRS (Lab-STICC UMR CNRS 6285)
 *
 * This file is part of OrbisGIS.
 *
 * OrbisGIS is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * OrbisGIS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * OrbisGIS. If not, see <http://www.gnu.org/licenses/>.
 *
 * For more information, please consult: <http://www.orbisgis.org/>
 * or contact directly:
 * info_at_ orbisgis.org
 */
package org.orbisgis.orbisdata.filter.fes_2_0_2;

import net.opengis.fes._2_0_2.*;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import java.util.Iterator;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;



/**
 * This class change a JaxB object in SQL parameter.
 * @Author Vincent QUILLIEN
 */
public class FesToSql {

    private static Logger LOGGER = LoggerFactory.getLogger(FesToSql.class);

    /**
     * This method take an object generated by JaxB from a xml file and give un return the SQL parameter.
     *
     * @param objectFromFilterXml
     * @return the SQL parameter
     * @throws JAXBException
     */
    public static StringBuilder XmlToSql(Object objectFromFilterXml) {
        StringBuilder returnSQL = new StringBuilder();

        if (objectFromFilterXml != null) {
            if (objectFromFilterXml instanceof JAXBElement) {
                // first node : One branch for Filter and one for SortBy
                switch (((JAXBElement) objectFromFilterXml).getName().getLocalPart()) {

                    case "Filter":
                        //not implemented yet
                    case "SortBy":
                        SortByType sortByType = (SortByType) ((JAXBElement) objectFromFilterXml).getValue();

                        if (sortByType.isSetSortProperty()) {
                            List<SortPropertyType> listProperty = sortByType.getSortProperty();
                            Iterator<SortPropertyType> listPropertyIterator = listProperty.iterator();

                            while (listPropertyIterator.hasNext()) {
                                SortPropertyType property = listPropertyIterator.next();

                                if (listPropertyIterator.hasNext() && property.isSetSortOrder()) {
                                    returnSQL.append(property.getValueReference());
                                    returnSQL.append(property.getSortOrder().value() + ", ");

                                } else if (listPropertyIterator.hasNext() && !(property.isSetSortOrder())) {
                                    returnSQL.append(property.getValueReference() + ", ");

                                } else if (!(listPropertyIterator.hasNext()) && (property.isSetSortOrder())) {
                                    returnSQL.append(property.getValueReference() + " ");
                                    returnSQL.append(property.getSortOrder());

                                } else {
                                    returnSQL.append(property.getValueReference());
                                }
                            }
                        } else {
                            LOGGER.warn("Warning : There aren't any property between the tag SortBy from the xml file ");
                        }
                        break;
                }
            } else {
                LOGGER.error("Error : Parameter objectFromFilterXml isn't an instance of JAXBElement");
            }
        } else {
            LOGGER.error("Error : Parameter objectFromFilterXml is null");
        }
        return returnSQL;
    }
}